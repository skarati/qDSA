#ifndef VECMULT_H_
#define VECMULT_H_

#define VECADD(C,A,B) {C = _mm256_add_epi64(A,B);}
#define VECSUB(C,A,B) {C = _mm256_sub_epi64(A,B);}
#define VECMULT(C,A,B) {C = _mm256_mul_epu32(A,B);}
#define VECSHIFTL(C,A,B) {C=_mm256_slli_epi64(A,B);}
#define VECSHIFTR(C,A,B) {C=_mm256_srli_epi64(A,B);}
#define VECAND(C,A,B) {C=_mm256_and_si256(A,B);}

const vec vecmask28 = {0xfffffff,0xfffffff,0xfffffff,0xfffffff};
const vec vecmask27 = {0x7ffffff,0x7ffffff,0x7ffffff,0x7ffffff};

vec VECMULT2S0,VECMULT2T0,VECMULT2U0,VECMULT10S1; 
vec VECMULT3S1,VECMULT3T1,VECMULT3U1,VECMULT3U2;
vec VECMULT5S1,VECMULT5S2,VECMULT5T1,VECMULT5T2,VECMULT5U0,VECMULT5U1,VECMULT5U2,VECMULT5U3,VECMULT5U4;
vec VECMULT9S1,VECMULT9S2,VECMULT9S3,VECMULT9S4,VECMULT9T1,VECMULT9T2,VECMULT9T3,VECMULT9T4,VECMULT9U0,VECMULT9U1,VECMULT9U2,VECMULT9U3,VECMULT9U4,VECMULT9U5,VECMULT9U6,VECMULT9U7,VECMULT9U8;
vec VECSQ4S0,VECSQ4T0,VECSQ4U0,VECSQ4U1,VECSQ4U2;
vec VECSQ5U0,VECSQ5U1,VECSQ5U2,VECSQ5U3,VECSQ5U4;
vec VECSQ9U0,VECSQ9U1,VECSQ9U2,VECSQ9U3,VECSQ9U4,VECSQ9U5,VECSQ9U6,VECSQ9U7,VECSQ9U8;

#define VECMULT2(C0,C1,C2,F0,F1,G0,G1){ \
	VECMULT(C0,F0,G0); VECMULT(VECMULT2S0,F0,G1); VECMULT(C2,F1,G1); VECMULT(VECMULT2T0,F1,G0); \
	VECADD(C1,VECMULT2S0,VECMULT2T0); \
}
#define VECMULT4(C0,C1,C2,C3,C4,C5,C6,F0,F1,F2,F3,G0,G1,G2,G3) { /* internal vars for VECMULT5 are used */ \
	VECMULT2(C0,C1,C2,F0,F1,G0,G1); \
	VECMULT2(C4,C5,C6,F2,F3,G2,G3);; \
	VECADD(VECMULT5S1,F0,F2); VECADD(VECMULT5S2,F1,F3); VECADD(VECMULT5T1,G0,G2); VECADD(VECMULT5T2,G1,G3); \
	VECMULT2(VECMULT5U1,VECMULT5U2,VECMULT5U3,VECMULT5S1,VECMULT5S2,VECMULT5T1,VECMULT5T2); \
	VECSUB(VECMULT5U1,VECMULT5U1,C0); VECSUB(VECMULT5U2,VECMULT5U2,C1); VECSUB(VECMULT5U3,VECMULT5U3,C2); \
	VECSUB(VECMULT5U1,VECMULT5U1,C4); VECSUB(VECMULT5U2,VECMULT5U2,C5); VECSUB(VECMULT5U3,VECMULT5U3,C6); \
	VECADD(C2,C2,VECMULT5U1); C3=VECMULT5U2; VECADD(C4,C4,VECMULT5U3); \
}
#define VECMULT9(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,C12,C13,C14,C15,C16,F0,F1,F2,F3,F4,F5,F6,F7,F8,G0,G1,G2,G3,G4,G5,G6,G7,G8) { \
	VECMULT4(C0,C1,C2,C3,C4,C5,C6,F0,F1,F2,F3,G0,G1,G2,G3); \
	VECMULT4(C8,C9,C10,C11,C12,C13,C14,F4,F5,F6,F7,G4,G5,G6,G7); \
	VECADD(VECMULT9S1,F0,F4); VECADD(VECMULT9S2,F1,F5); VECADD(VECMULT9S3,F2,F6); VECADD(VECMULT9S4,F3,F7); \
	VECADD(VECMULT9T1,G0,G4); VECADD(VECMULT9T2,G1,G5); VECADD(VECMULT9T3,G2,G6); VECADD(VECMULT9T4,G3,G7); \
	VECMULT4(VECMULT9U1,VECMULT9U2,VECMULT9U3,VECMULT9U4,VECMULT9U5,VECMULT9U6,VECMULT9U7,VECMULT9S1,VECMULT9S2,VECMULT9S3,VECMULT9S4,VECMULT9T1,VECMULT9T2,VECMULT9T3,VECMULT9T4); \
	VECSUB(VECMULT9U1,VECMULT9U1,C0); VECSUB(VECMULT9U2,VECMULT9U2,C1); VECSUB(VECMULT9U3,VECMULT9U3,C2); VECSUB(VECMULT9U4,VECMULT9U4,C3); VECSUB(VECMULT9U5,VECMULT9U5,C4); VECSUB(VECMULT9U6,VECMULT9U6,C5); VECSUB(VECMULT9U7,VECMULT9U7,C6); \
	VECSUB(VECMULT9U1,VECMULT9U1,C8); VECSUB(VECMULT9U2,VECMULT9U2,C9); VECSUB(VECMULT9U3,VECMULT9U3,C10); VECSUB(VECMULT9U4,VECMULT9U4,C11); VECSUB(VECMULT9U5,VECMULT9U5,C12); VECSUB(VECMULT9U6,VECMULT9U6,C13); VECSUB(VECMULT9U7,VECMULT9U7,C14); \
	VECADD(C4,C4,VECMULT9U1); VECADD(C5,C5,VECMULT9U2); VECADD(C6,C6,VECMULT9U3); C7=VECMULT9U4; VECADD(C8,C8,VECMULT9U5); VECADD(C9,C9,VECMULT9U6); VECADD(C10,C10,VECMULT9U7); \
	VECMULT(VECMULT9U0,F8,G0); VECMULT(VECMULT9U1,F8,G1); VECMULT(VECMULT9U2,F8,G2); VECMULT(VECMULT9U3,F8,G3); VECMULT(VECMULT9U4,F8,G4); \
	VECMULT(VECMULT9U5,F8,G5); VECMULT(VECMULT9U6,F8,G6); VECMULT(VECMULT9U7,F8,G7); VECMULT(VECMULT9U8,F8,G8); \
	VECMULT(VECMULT9S1,G8,F0); VECMULT(VECMULT9S2,G8,F1); VECMULT(VECMULT9S3,G8,F2); VECMULT(VECMULT9S4,G8,F3); \
	VECMULT(VECMULT9T1,G8,F4); VECMULT(VECMULT9T2,G8,F5); VECMULT(VECMULT9T3,G8,F6); VECMULT(VECMULT9T4,G8,F7); \
	VECADD(VECMULT9U0,VECMULT9U0,VECMULT9S1); VECADD(VECMULT9U1,VECMULT9U1,VECMULT9S2); VECADD(VECMULT9U2,VECMULT9U2,VECMULT9S3); VECADD(VECMULT9U3,VECMULT9U3,VECMULT9S4); \
	VECADD(VECMULT9U4,VECMULT9U4,VECMULT9T1); VECADD(VECMULT9U5,VECMULT9U5,VECMULT9T2); VECADD(VECMULT9U6,VECMULT9U6,VECMULT9T3); VECADD(VECMULT9U7,VECMULT9U7,VECMULT9T4); \
	VECADD(C8,C8,VECMULT9U0); VECADD(C9,C9,VECMULT9U1); VECADD(C10,C10,VECMULT9U2); VECADD(C11,C11,VECMULT9U3); \
	VECADD(C12,C12,VECMULT9U4); VECADD(C13,C13,VECMULT9U5); VECADD(C14,C14,VECMULT9U6); \
	C15 = VECMULT9U7; C16 = VECMULT9U8; \
}

#define VECMULT9Montgomery(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,C12,C13,C14,C15,C16,F0,F1,F2,F3,F4,F5,F6,F7,F8,G0,G1,G2,G3,G4,G5,G6,G7,G8) { \
	VECMULT4(C0,C1,C2,C3,C4,C5,C6,F0,F1,F2,F3,G0,G1,G2,G3); \
	VECMULT5(C8,C9,C10,C11,C12,C13,C14,C15,C16,F4,F5,F6,F7,F8,G4,G5,G6,G7,G8); \
	VECADD(VECMULT9S1,F0,F5); VECADD(VECMULT9S2,F1,F6); VECADD(VECMULT9S3,F2,F7); VECADD(VECMULT9S4,F3,F8); \
	VECADD(VECMULT9T1,G0,G5); VECADD(VECMULT9T2,G1,G6); VECADD(VECMULT9T3,G2,G7); VECADD(VECMULT9T4,G3,G8); \
	ModifiedVECMULT5(VECMULT9U1,VECMULT9U2,VECMULT9U3,VECMULT9U4,VECMULT9U5,VECMULT9U6,VECMULT9U7,VECMULT9U8,F4,VECMULT9S1,VECMULT9S2,VECMULT9S3,VECMULT9S4,G4,VECMULT9T1,VECMULT9T2,VECMULT9T3,VECMULT9T4,C8); \
	VECSUB(VECMULT9U1,VECMULT9U1,C9); VECSUB(VECMULT9U2,VECMULT9U2,C10); VECSUB(VECMULT9U3,VECMULT9U3,C11); VECSUB(VECMULT9U4,VECMULT9U4,C12); VECSUB(VECMULT9U5,VECMULT9U5,C13); VECSUB(VECMULT9U6,VECMULT9U6,C14); VECSUB(VECMULT9U7,VECMULT9U7,C15); VECSUB(VECMULT9U8,VECMULT9U8,C16); \
	VECSUB(VECMULT9U2,VECMULT9U2,C0); VECSUB(VECMULT9U3,VECMULT9U3,C1); VECSUB(VECMULT9U4,VECMULT9U4,C2); VECSUB(VECMULT9U5,VECMULT9U5,C3); VECSUB(VECMULT9U6,VECMULT9U6,C4); VECSUB(VECMULT9U7,VECMULT9U7,C5); VECSUB(VECMULT9U8,VECMULT9U8,C6); \
	VECADD(C4,C4,VECMULT9U1); VECADD(C5,C5,VECMULT9U2); VECADD(C6,C6,VECMULT9U3); C7=VECMULT9U4; VECADD(C8,C8,VECMULT9U5); VECADD(C9,C9,VECMULT9U6); VECADD(C10,C10,VECMULT9U7); VECADD(C11,C11,VECMULT9U8); \
}

#define VECSQ4(C0,C1,C2,C3,C4,C5,C6,F0,F1,F2,F3){ \
\
	VECMULT(C0,F0,F0); VECMULT(C2,F1,F1); VECMULT(C1,F0,F1); \
	VECMULT(C4,F2,F2); VECMULT(C6,F3,F3); VECMULT(C5,F2,F3); \
	VECMULT(VECSQ4U0,F0,F2); VECMULT(VECSQ4U2,F1,F3); VECMULT(VECSQ4U1,F0,F3); VECMULT(VECSQ4S0,F1,F2); \
\
	VECADD(VECSQ4U1,VECSQ4U1,VECSQ4S0); \
\
	VECSHIFTL(C1,C1,1); VECSHIFTL(C5,C5,1); VECSHIFTL(VECSQ4U0,VECSQ4U0,1); VECSHIFTL(VECSQ4U1,VECSQ4U1,1); VECSHIFTL(VECSQ4U2,VECSQ4U2,1); \
\
	VECADD(C2,C2,VECSQ4U0); C3=VECSQ4U1; VECADD(C4,C4,VECSQ4U2); \
}

#define VECSQ4Karatsuba(C0,C1,C2,C3,C4,C5,C6,F0,F1,F2,F3){ \
\
	VECADD(VECSQ4S0,F0,F1); VECADD(VECSQ4T0,F2,F3); \
\
	VECMULT(C0,F0,F0); VECMULT(C2,F1,F1); VECMULT(C1,F0,F1); \
	VECMULT(C4,F2,F2); VECMULT(C6,F3,F3); VECMULT(C5,F2,F3); \
	VECMULT(VECSQ4U0,F0,F2); VECMULT(VECSQ4U2,F1,F3); VECMULT(VECSQ4U1,VECSQ4S0,VECSQ4T0); \
\
	VECSUB(VECSQ4U1,VECSQ4U1,VECSQ4U0); VECSUB(VECSQ4U1,VECSQ4U1,VECSQ4U2); \
\
	VECSHIFTL(C1,C1,1); VECSHIFTL(C5,C5,1); VECSHIFTL(VECSQ4U0,VECSQ4U0,1); VECSHIFTL(VECSQ4U1,VECSQ4U1,1); VECSHIFTL(VECSQ4U2,VECSQ4U2,1); \
\
	VECADD(C2,C2,VECSQ4U0); C3=VECSQ4U1; VECADD(C4,C4,VECSQ4U2); \
}

#define VECSQ5(C0,C1,C2,C3,C4,C5,C6,C7,C8,F0,F1,F2,F3,F4) { \
	VECSQ4(C0,C1,C2,C3,C4,C5,C6,F0,F1,F2,F3); \
	VECMULT(VECSQ5U0,F4,F0); VECMULT(VECSQ5U1,F4,F1); VECMULT(VECSQ5U2,F4,F2); VECMULT(VECSQ5U3,F4,F3); VECMULT(VECSQ5U4,F4,F4); \
	VECSHIFTL(VECSQ5U0,VECSQ5U0,1); VECSHIFTL(VECSQ5U1,VECSQ5U1,1); VECSHIFTL(VECSQ5U2,VECSQ5U2,1); VECSHIFTL(VECSQ5U3,VECSQ5U3,1); \
	VECADD(C4,C4,VECSQ5U0); VECADD(C5,C5,VECSQ5U1); VECADD(C6,C6,VECSQ5U2); \
	C7 = VECSQ5U3; C8 = VECSQ5U4; \
}

#define VECSQ9(C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,C12,C13,C14,C15,C16,F0,F1,F2,F3,F4,F5,F6,F7,F8) { \
	VECSQ4(C0,C1,C2,C3,C4,C5,C6,F0,F1,F2,F3); \
	VECSQ4(C8,C9,C10,C11,C12,C13,C14,F4,F5,F6,F7); \
	VECMULT4(VECSQ9U0,VECSQ9U1,VECSQ9U2,VECSQ9U3,VECSQ9U4,VECSQ9U5,VECSQ9U6,F0,F1,F2,F3,F4,F5,F6,F7); \
	VECSHIFTL(VECSQ9U0,VECSQ9U0,1); VECSHIFTL(VECSQ9U1,VECSQ9U1,1); VECSHIFTL(VECSQ9U2,VECSQ9U2,1); VECSHIFTL(VECSQ9U3,VECSQ9U3,1); \
	VECSHIFTL(VECSQ9U4,VECSQ9U4,1); VECSHIFTL(VECSQ9U5,VECSQ9U5,1); VECSHIFTL(VECSQ9U6,VECSQ9U6,1); \
	VECADD(C4,C4,VECSQ9U0); VECADD(C5,C5,VECSQ9U1); VECADD(C6,C6,VECSQ9U2); C7=VECSQ9U3; \
	VECADD(C8,C8,VECSQ9U4); VECADD(C9,C9,VECSQ9U5); VECADD(C10,C10,VECSQ9U6); \
	VECMULT(VECSQ9U0,F8,F0); VECMULT(VECSQ9U1,F8,F1); VECMULT(VECSQ9U2,F8,F2); VECMULT(VECSQ9U3,F8,F3); VECMULT(VECSQ9U4,F8,F4); \
	VECMULT(VECSQ9U5,F8,F5); VECMULT(VECSQ9U6,F8,F6); VECMULT(VECSQ9U7,F8,F7); VECMULT(VECSQ9U8,F8,F8); \
	VECSHIFTL(VECSQ9U0,VECSQ9U0,1); VECSHIFTL(VECSQ9U1,VECSQ9U1,1); VECSHIFTL(VECSQ9U2,VECSQ9U2,1); VECSHIFTL(VECSQ9U3,VECSQ9U3,1); \
	VECSHIFTL(VECSQ9U4,VECSQ9U4,1); VECSHIFTL(VECSQ9U5,VECSQ9U5,1); VECSHIFTL(VECSQ9U6,VECSQ9U6,1); VECSHIFTL(VECSQ9U7,VECSQ9U7,1); \
	VECADD(C8,C8,VECSQ9U0); VECADD(C9,C9,VECSQ9U1); VECADD(C10,C10,VECSQ9U2); VECADD(C11,C11,VECSQ9U3); \
	VECADD(C12,C12,VECSQ9U4); VECADD(C13,C13,VECSQ9U5); VECADD(C14,C14,VECSQ9U6); \
	C15=VECSQ9U7; C16=VECSQ9U8; \
}

#define VECREDUCE2519(RES0,RES1,RES2,RES3,RES4,RES5,RES6,RES7,RES8,TEMP) {\
	VECREDUCEPARTA2519(RES0,RES1,RES2,RES3,RES4,RES5,RES6,RES7,RES8,TEMP); \
	VECREDUCEPARTB2519(RES0,RES1,RES2,RES3,RES4,RES5,RES6,RES7,RES8); \
}

#define VECREDUCE2519expand(RES0,RES1,RES2,RES3,RES4,RES5,RES6,RES7,RES8,TEMP) {\
	VECREDUCEPARTA2519expand(RES0,RES1,RES2,RES3,RES4,RES5,RES6,RES7,RES8,TEMP); \
	VECREDUCEPARTB2519(RES0,RES1,RES2,RES3,RES4,RES5,RES6,RES7,RES8); \
}

#define VECREDUCEPARTA2519(RES0,RES1,RES2,RES3,RES4,RES5,RES6,RES7,RES8,TEMP) {\
\
	VECSHIFTL(VECMULT9U0,TEMP[9],3); VECSHIFTL(VECMULT9U1,TEMP[10],3); VECSHIFTL(VECMULT9U2,TEMP[11],3); VECSHIFTL(VECMULT9U3,TEMP[12],3); \
	VECSHIFTL(VECMULT9U4,TEMP[13],3); VECSHIFTL(VECMULT9U5,TEMP[14],3); VECSHIFTL(VECMULT9U6,TEMP[15],3); VECSHIFTL(VECMULT9U7,TEMP[16],3); \
	VECADD(VECMULT9U0,VECMULT9U0,TEMP[9]); VECADD(VECMULT9U1,VECMULT9U1,TEMP[10]); \
	VECADD(VECMULT9U2,VECMULT9U2,TEMP[11]); VECADD(VECMULT9U3,VECMULT9U3,TEMP[12]); \
	VECADD(VECMULT9U4,VECMULT9U4,TEMP[13]); VECADD(VECMULT9U5,VECMULT9U5,TEMP[14]); \
	VECADD(VECMULT9U6,VECMULT9U6,TEMP[15]); VECADD(VECMULT9U7,VECMULT9U7,TEMP[16]); \
	VECSHIFTL(VECMULT9U0,VECMULT9U0,1); VECSHIFTL(VECMULT9U1,VECMULT9U1,1); VECSHIFTL(VECMULT9U2,VECMULT9U2,1); VECSHIFTL(VECMULT9U3,VECMULT9U3,1); \
	VECSHIFTL(VECMULT9U4,VECMULT9U4,1); VECSHIFTL(VECMULT9U5,VECMULT9U5,1); VECSHIFTL(VECMULT9U6,VECMULT9U6,1); VECSHIFTL(VECMULT9U7,VECMULT9U7,1); \
 \
	VECADD(RES0,TEMP[0],VECMULT9U0); VECADD(RES1,TEMP[1],VECMULT9U1); VECADD(RES2,TEMP[2],VECMULT9U2); VECADD(RES3,TEMP[3],VECMULT9U3); \
	VECADD(RES4,TEMP[4],VECMULT9U4); VECADD(RES5,TEMP[5],VECMULT9U5); VECADD(RES6,TEMP[6],VECMULT9U6); VECADD(RES7,TEMP[7],VECMULT9U7); \
	RES8 = TEMP[8]; \
}

const vec reductionConst = {18,18,18,18};

#define VECREDUCEPARTA2519expand(RES0,RES1,RES2,RES3,RES4,RES5,RES6,RES7,RES8,TEMP) {\
\
	VECSHIFTR(VECMULT10S1,TEMP[9],28);  VECAND(TEMP[9],TEMP[9],vecmask28);   VECADD(TEMP[10],TEMP[10],VECMULT10S1); \
        VECSHIFTR(VECMULT10S1,TEMP[10],28); VECAND(TEMP[10],TEMP[10],vecmask28); VECADD(TEMP[11],TEMP[11],VECMULT10S1); \
        VECSHIFTR(VECMULT10S1,TEMP[11],28); VECAND(TEMP[11],TEMP[11],vecmask28); VECADD(TEMP[12],TEMP[12],VECMULT10S1); \
        VECSHIFTR(VECMULT10S1,TEMP[12],28); VECAND(TEMP[12],TEMP[12],vecmask28); VECADD(TEMP[13],TEMP[13],VECMULT10S1); \
        VECSHIFTR(VECMULT10S1,TEMP[13],28); VECAND(TEMP[13],TEMP[13],vecmask28); VECADD(TEMP[14],TEMP[14],VECMULT10S1); \
        VECSHIFTR(VECMULT10S1,TEMP[14],28); VECAND(TEMP[14],TEMP[14],vecmask28); VECADD(TEMP[15],TEMP[15],VECMULT10S1); \
        VECSHIFTR(VECMULT10S1,TEMP[15],28); VECAND(TEMP[15],TEMP[15],vecmask28); VECADD(TEMP[16],TEMP[16],VECMULT10S1); \
        VECSHIFTR(VECMULT10S1,TEMP[16],28); VECAND(TEMP[16],TEMP[16],vecmask28); \
\
        VECMULT(TEMP[9],TEMP[9],reductionConst);   VECMULT(TEMP[10],TEMP[10],reductionConst); \
        VECMULT(TEMP[11],TEMP[11],reductionConst); VECMULT(TEMP[12],TEMP[12],reductionConst); \
        VECMULT(TEMP[13],TEMP[13],reductionConst); VECMULT(TEMP[14],TEMP[14],reductionConst); \
        VECMULT(TEMP[15],TEMP[15],reductionConst); VECMULT(TEMP[16],TEMP[16],reductionConst); \
	VECMULT(VECMULT10S1,VECMULT10S1,reductionConst); \
\
        VECADD(RES0,TEMP[0],TEMP[9]);  VECADD(RES1,TEMP[1],TEMP[10]); \
        VECADD(RES2,TEMP[2],TEMP[11]); VECADD(RES3,TEMP[3],TEMP[12]); \
        VECADD(RES4,TEMP[4],TEMP[13]); VECADD(RES5,TEMP[5],TEMP[14]); \
        VECADD(RES6,TEMP[6],TEMP[15]); VECADD(RES7,TEMP[7],TEMP[16]); \
        VECADD(RES8,TEMP[8],VECMULT10S1); \
}


#define VECREDUCEPARTB2519(RES0,RES1,RES2,RES3,RES4,RES5,RES6,RES7,RES8) {\
\
	VECSHIFTR(VECMULT9S1,RES0,28); VECAND(RES0,RES0,vecmask28); VECADD(RES1,RES1,VECMULT9S1); \
	VECSHIFTR(VECMULT9S1,RES1,28); VECAND(RES1,RES1,vecmask28); VECADD(RES2,RES2,VECMULT9S1); \
	VECSHIFTR(VECMULT9S1,RES2,28); VECAND(RES2,RES2,vecmask28); VECADD(RES3,RES3,VECMULT9S1); \
	VECSHIFTR(VECMULT9S1,RES3,28); VECAND(RES3,RES3,vecmask28); VECADD(RES4,RES4,VECMULT9S1); \
	VECSHIFTR(VECMULT9S1,RES4,28); VECAND(RES4,RES4,vecmask28); VECADD(RES5,RES5,VECMULT9S1); \
	VECSHIFTR(VECMULT9S1,RES5,28); VECAND(RES5,RES5,vecmask28); VECADD(RES6,RES6,VECMULT9S1); \
	VECSHIFTR(VECMULT9S1,RES6,28); VECAND(RES6,RES6,vecmask28); VECADD(RES7,RES7,VECMULT9S1); \
	VECSHIFTR(VECMULT9S1,RES7,28); VECAND(RES7,RES7,vecmask28); VECADD(RES8,RES8,VECMULT9S1); \
	VECSHIFTR(VECMULT9S1,RES8,27); VECAND(RES8,RES8,vecmask27); \
	VECSHIFTL(VECMULT9S2,VECMULT9S1,3); VECADD(VECMULT9S1,VECMULT9S2,VECMULT9S1); \
	VECADD(RES0,RES0,VECMULT9S1); \
	VECSHIFTR(VECMULT9S1,RES0,28); VECAND(RES0,RES0,vecmask28); VECADD(RES1,RES1,VECMULT9S1); \
}


#endif
