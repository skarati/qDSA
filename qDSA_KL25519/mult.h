#ifndef MULT_H_
#define MULT_H_

#define ADD(C,A,B) {C = A+B;}
#define SUB(C,A,B) {C = A-B;}
#define MULT(C,A,B) {C = A*B;}
#define SHIFTL(C,A,B) {C = A << (B);}
#define SHIFTR(C,A,B) {C = A >> (B);}
#define AND(C,A,B) {C = A & B;}

u64 MULT2S0,MULT2T0,MULT2U0; 
u64 MULT3S1,MULT3T1,MULT3U1,MULT3U2;
u64 MULT5S1,MULT5S2,MULT5T1,MULT5T2,MULT5U0,MULT5U1,MULT5U2,MULT5U3,MULT5U4;
u64 MULT10S0,MULT10S1,MULT10S2,MULT10S3,MULT10S4,MULT10T0,MULT10T1,MULT10T2,MULT10T3,MULT10T4,MULT10U0,MULT10U1,MULT10U2,MULT10U3,
	MULT10U4,MULT10U5,MULT10U6,MULT10U7,MULT10U8;
u64 SQ4S0,SQ4T0,SQ4U0,SQ4U1,SQ4U2;
u64 SQ5U0,SQ5U1,SQ5U2,SQ5U3,SQ5U4;
u64 SQ10U0,SQ10U1,SQ10U2,SQ10U3,SQ10U4,SQ10U5,SQ10U6,SQ10U7,SQ10U8;


#define REDUCE25519(RES0,RES1,RES2,RES3,RES4,RES5,RES6,RES7,RES8,RES9,TEMP) { \
\
	REDUCEPARTA25519(RES0,RES1,RES2,RES3,RES4,RES5,RES6,RES7,RES8,RES9,TEMP); \
	REDUCEPARTB25519(RES0,RES1,RES2,RES3,RES4,RES5,RES6,RES7,RES8,RES9); \
}

#define REDUCEPARTB25519_51(RES0,RES1,RES2,RES3,RES4) { \
\
	SHIFTR(MULT10S1,RES0,51); AND(RES0,RES0,mask51); ADD(RES1,RES1,MULT10S1); \
	SHIFTR(MULT10S1,RES1,51); AND(RES1,RES1,mask51); ADD(RES2,RES2,MULT10S1); \
	SHIFTR(MULT10S1,RES2,51); AND(RES2,RES2,mask51); ADD(RES3,RES3,MULT10S1); \
	SHIFTR(MULT10S1,RES3,51); AND(RES3,RES3,mask51); ADD(RES4,RES4,MULT10S1); \
	SHIFTR(MULT10S1,RES4,51); AND(RES4,RES4,mask51); \
\
	MULT(MULT10S1,MULT10S1,19ULL); \
	SHIFTR(MULT10S1,RES0,54); AND(RES0,RES0,mask51); ADD(RES1,RES1,MULT10S1); \
}

#define REDUCEPARTA25519(RES0,RES1,RES2,RES3,RES4,RES5,RES6,RES7,RES8,RES9,TEMP) { /* 608 = 32*19*/ \
\
	SHIFTR(MULT10S1,TEMP[10],26); AND(TEMP[10],TEMP[10],mask26); ADD(TEMP[11],TEMP[11],MULT10S1); \
        SHIFTR(MULT10S1,TEMP[11],26); AND(TEMP[11],TEMP[11],mask26); ADD(TEMP[12],TEMP[12],MULT10S1); \
        SHIFTR(MULT10S1,TEMP[12],26); AND(TEMP[12],TEMP[12],mask26); ADD(TEMP[13],TEMP[13],MULT10S1); \
        SHIFTR(MULT10S1,TEMP[13],26); AND(TEMP[13],TEMP[13],mask26); ADD(TEMP[14],TEMP[14],MULT10S1); \
        SHIFTR(MULT10S1,TEMP[14],26); AND(TEMP[14],TEMP[14],mask26); ADD(TEMP[15],TEMP[15],MULT10S1); \
        SHIFTR(MULT10S1,TEMP[15],26); AND(TEMP[15],TEMP[15],mask26); ADD(TEMP[16],TEMP[16],MULT10S1); \
        SHIFTR(MULT10S1,TEMP[16],26); AND(TEMP[16],TEMP[16],mask26); ADD(TEMP[17],TEMP[17],MULT10S1); \
        SHIFTR(MULT10S1,TEMP[17],26); AND(TEMP[17],TEMP[17],mask26); ADD(TEMP[18],TEMP[18],MULT10S1); \
        SHIFTR(MULT10S1,TEMP[18],26); AND(TEMP[18],TEMP[18],mask26); \
\
	MULT(TEMP[10],TEMP[10],608ULL); MULT(TEMP[11],TEMP[11],608ULL); MULT(TEMP[12],TEMP[12],608ULL); MULT(TEMP[13],TEMP[13],608ULL); \
	MULT(TEMP[14],TEMP[14],608ULL); MULT(TEMP[15],TEMP[15],608ULL); MULT(TEMP[16],TEMP[16],608ULL); MULT(TEMP[17],TEMP[17],608ULL); \
	MULT(TEMP[18],TEMP[18],608ULL); MULT(MULT10S1,MULT10S1,608ULL); \
\
	ADD(RES0,TEMP[0],TEMP[10]); ADD(RES1,TEMP[1],TEMP[11]); ADD(RES2,TEMP[2],TEMP[12]); ADD(RES3,TEMP[3],TEMP[13]); \
	ADD(RES4,TEMP[4],TEMP[14]); ADD(RES5,TEMP[5],TEMP[15]); ADD(RES6,TEMP[6],TEMP[16]); ADD(RES7,TEMP[7],TEMP[17]); \
	ADD(RES8,TEMP[8],TEMP[18]); ADD(RES9,TEMP[9],MULT10S1);\
}

#define REDUCEPARTB25519(RES0,RES1,RES2,RES3,RES4,RES5,RES6,RES7,RES8,RES9) { \
\
	SHIFTR(MULT10S1,RES0,26); AND(RES0,RES0,mask26); ADD(RES1,RES1,MULT10S1); \
	SHIFTR(MULT10S1,RES1,26); AND(RES1,RES1,mask26); ADD(RES2,RES2,MULT10S1); \
	SHIFTR(MULT10S1,RES2,26); AND(RES2,RES2,mask26); ADD(RES3,RES3,MULT10S1); \
	SHIFTR(MULT10S1,RES3,26); AND(RES3,RES3,mask26); ADD(RES4,RES4,MULT10S1); \
	SHIFTR(MULT10S1,RES4,26); AND(RES4,RES4,mask26); ADD(RES5,RES5,MULT10S1); \
	SHIFTR(MULT10S1,RES5,26); AND(RES5,RES5,mask26); ADD(RES6,RES6,MULT10S1); \
	SHIFTR(MULT10S1,RES6,26); AND(RES6,RES6,mask26); ADD(RES7,RES7,MULT10S1); \
	SHIFTR(MULT10S1,RES7,26); AND(RES7,RES7,mask26); ADD(RES8,RES8,MULT10S1); \
	SHIFTR(MULT10S1,RES8,26); AND(RES8,RES8,mask26); ADD(RES9,RES9,MULT10S1); \
	SHIFTR(MULT10S1,RES9,21); AND(RES9,RES9,mask21); \
	MULT(MULT10S1,MULT10S1,19ULL); ADD(RES0,RES0,MULT10S1); \
	SHIFTR(MULT10S1,RES0,26); AND(RES0,RES0,mask26); ADD(RES1,RES1,MULT10S1); \
}

#endif
